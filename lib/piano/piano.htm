<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
    <meta http-equiv="content-type" content="text/html;
      charset=windows-1252">
    <title>Piano Synthesizer Tutorial</title>
    <style>body {max-width: 40em}</style>
  </head>
  <body bgcolor="#FFFFFF">
    <h1>Piano Synthesizer Tutorial </h1>
    <p><b>Ning Hu and Roger B. Dannenberg</b></p>
    <p>This page describes how to use the piano synthesizer in Nyquist.
      Both SAL and Lisp syntax are used. Lisp syntax is in small type.<br>
    </p>
    <p>First, load the file "pianosyn.lsp" to initialize the
      synthesizer. The file is in the "lib" directory.</p>
    <p><tt>&gt; load "pianosyn"<br>
        <br>
      </tt><small><small>&gt; <tt>(</tt><tt>load</tt><tt> "pianosyn"</tt><tt>)</tt></small></small></p>
    <p>After the piano synthesizer has been initialized and returns, you
      can use the functions provided by the synthesizer program to
      generate piano sounds.</p>
    <p>The functions are shown as below:</p>
    <h2>Generate a single note</h2>
    <p>Use the function:</p>
    <p><tt>piano-note(<i>duration, step, dynamic</i>) </tt></p>
    <p><small><small><tt>(piano-note <i>duration step dynamic</i>) </tt></small></small></p>
    <ul>
      <li><i>duration</i> represents the duration of the note in
        seconds.</li>
      <li> <i> step </i>represents the pitch of note, and uses step
        values as in all Nyquist functions. For example, value 60 is
        middle C (C4).</li>
      <li><i>dynamic</i> means the dynamics of the note, and it ranges
        from 0 to 127. In a midi file, it is used as the velocity of the
        note. </li>
    </ul>
    This behavior returns a sound. You can play the sound.
    <p>Examples:</p>
    <pre>&gt; play piano-note(4, 60, 100)

<small><small>&gt; (play (piano-note 4 60 100))</small></small></pre>
    The commands above will generate and immediately play a C4 note that
    lasts 4 seconds, velocity at 100.
    <h2>Synthesize piano music according to a midi file</h2>
    <p>To convert a midi file to sound, use the function:</p>
    <pre>piano-midi(<i>midi-file-name</i>)


<small><small>(piano_midi <i>midi_file_name</i>)</small></small></pre>
    <ul>
      <li><tt><i>midi-file-name</i></tt> is a string representing the
        name of the midi file.</li>
    </ul>
    This behavior will generate sound according to the score of the midi
    file. It generates stereo sound, and the sample rate is the default
    sound sample rate.
    <h2>Convert midi file to sound file</h2>
    <p>To convert a midi file to a sound file using the piano
      synthesizer, use the function:</p>
    <pre>piano-midi2file(<i>midi-file-name</i>, <i>sound-file-name</i>)

<small><small>(piano-midi2file <i>midi-file-name sound-file-name</i>)</small></small></pre>
    <ul>
      <li><tt><i>midi-file-name</i></tt> is a string representing the
        name of the midi file. </li>
      <li><i><tt><i>sound-file-name</i></tt> </i>is a string
        representing the name of the sound file. </li>
    </ul>
    This command will generate a sound file according to the score of
    the midi file and play it at the same time. It generates stereo
    sound, and the sample rate is the default sound sample rate.
    <h3>Example:</h3>
    <pre>&gt; exec piano-midi2file("demo.mid", "demo.wav")

<small><small>&gt; (piano-midi2file "demo.mid" "demo.wav")</small></small></pre>
    <ul>
      <li>"demo.mid" is the name of the midi file. It saves the output
        sound into "demo.wav", and plays it when generating the output.</li>
    </ul>
  </body>
</html>
